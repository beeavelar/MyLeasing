@model MyLeasing.Web.Models.OwnerViewModel //Agora quem passa os parâmentro é o OwnerViewModel e não mais o Owner --> @model MyLeasing.Web.Data.Entities.Owner --> A view Create (do controle Owners) não manda nenhum parametro para a view Create pq lá no controller Owner na action Create, no return não tem tenhum parametro sendo passado --> return View(); A view Create não manda nada para ca, mas envia os dados inseridos no form daqui para o controller Owner --> Por isso temos que indicar o @model, ou seja, o modelo que a view vai utilizar para enviar os dados


@{
    ViewData["Title"] = "Create";
}

<h1>New Owner</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
           <partial name="/Views/_Owners.cshtml" />
            
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                 <a asp-action="Index" class="btn btn-success">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
